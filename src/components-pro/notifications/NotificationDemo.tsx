'use client';

import React from 'react';
import { Button } from '@/components/ui/button';
import { useNotifications } from './NotificationSystem';
import { notify, notificationService } from '@/services/notification-service';

// Componente de demonstra√ß√£o do sistema de notifica√ß√µes
export const NotificationDemo: React.FC = () => {
  const { createNotification, requestPermission } = useNotifications();

  // Demonstra√ß√µes de diferentes tipos de notifica√ß√£o
  const demoNotifications = {
    priceAlert: () => {
      notify.priceAlert('BTC', 48500, 50000, 'above');
    },

    arbitrage: () => {
      notify.arbitrage('BTC', ['Binance', 'Coinbase'], 2.5, 150000);
    },

    tradingSignal: () => {
      notify.trading('BTC', 'buy', 85, ['RSI', 'MACD', 'EMA']);
    },

    portfolio: () => {
      notify.portfolio(2500, 5.2, '24h');
    },

    news: () => {
      notify.news(
        'SEC Aprova ETF de Bitcoin',
        'A Securities and Exchange Commission aprovou oficialmente o primeiro ETF de Bitcoin spot.',
        'CoinDesk',
        'high',
        'https://example.com/news'
      );
    },

    success: () => {
      notify.success('Trade Executado', 'Sua ordem de compra de 0.1 BTC foi executada com sucesso!');
    },

    error: () => {
      notify.error('Erro de Conex√£o', 'Falha ao conectar com a exchange. Tentando reconectar...');
    },

    warning: () => {
      notify.warning('Volatilidade Alta', 'BTC apresenta alta volatilidade. Considere revisar suas posi√ß√µes.');
    },

    info: () => {
      notify.info('Manuten√ß√£o Programada', 'Sistema entrar√° em manuten√ß√£o √†s 02:00 UTC por 30 minutos.');
    }
  };

  // Demonstra√ß√µes de monitoramento
  const demoMonitoring = {
    startPriceAlert: () => {
      const alertId = notificationService.startPriceMonitoring('BTC', 50000, 'above', 10000);
      notify.info('Alerta de Pre√ßo Ativado', `Monitorando BTC > $50,000 (ID: ${alertId})`);
    },

    startArbitrageScanner: () => {
      notificationService.startArbitrageScanner(['BTC', 'ETH'], ['Binance', 'Coinbase', 'Kraken'], 30000);
      notify.info('Scanner de Arbitragem', 'Scanner ativado para BTC e ETH em 3 exchanges');
    },

    startPortfolioMonitoring: () => {
      notificationService.startPortfolioMonitoring(60000);
      notify.info('Monitoramento de Portfolio', 'Monitoramento ativado com verifica√ß√µes a cada minuto');
    }
  };

  const handleRequestPermission = async () => {
    const permission = await requestPermission();
    if (permission === 'granted') {
      notify.success('Permiss√£o Concedida', 'Notifica√ß√µes do browser habilitadas!');
    } else {
      notify.warning('Permiss√£o Negada', 'Notifica√ß√µes do browser n√£o est√£o dispon√≠veis');
    }
  };

  return (
    <div className="p-6 space-y-6">
      <div>
        <h2 className="text-2xl font-bold mb-4">Sistema de Notifica√ß√µes - Demo</h2>
        <p className="text-gray-600 dark:text-gray-400 mb-6">
          Teste os diferentes tipos de notifica√ß√µes e funcionalidades do sistema.
        </p>
      </div>

      {/* Permiss√£o do Browser */}
      <div className="bg-gray-50 dark:bg-gray-800 p-4 rounded-lg">
        <h3 className="text-lg font-semibold mb-3">Permiss√£o do Browser</h3>
        <Button onClick={handleRequestPermission} className="mb-2">
          Solicitar Permiss√£o para Notifica√ß√µes
        </Button>
        <p className="text-sm text-gray-500">
          Necess√°rio para exibir notifica√ß√µes quando a p√°gina n√£o estiver ativa.
        </p>
      </div>

      {/* Tipos de Notifica√ß√£o */}
      <div className="bg-gray-50 dark:bg-gray-800 p-4 rounded-lg">
        <h3 className="text-lg font-semibold mb-3">Tipos de Notifica√ß√£o</h3>
        <div className="grid grid-cols-2 md:grid-cols-3 gap-3">
          <Button 
            variant="outline" 
            onClick={demoNotifications.priceAlert}
            className="text-blue-600 border-blue-600 hover:bg-blue-50"
          >
            üí∞ Alerta de Pre√ßo
          </Button>
          
          <Button 
            variant="outline" 
            onClick={demoNotifications.arbitrage}
            className="text-green-600 border-green-600 hover:bg-green-50"
          >
            üìà Arbitragem
          </Button>
          
          <Button 
            variant="outline" 
            onClick={demoNotifications.tradingSignal}
            className="text-purple-600 border-purple-600 hover:bg-purple-50"
          >
            üìä Sinal de Trading
          </Button>
          
          <Button 
            variant="outline" 
            onClick={demoNotifications.portfolio}
            className="text-indigo-600 border-indigo-600 hover:bg-indigo-50"
          >
            üíº Portfolio
          </Button>
          
          <Button 
            variant="outline" 
            onClick={demoNotifications.news}
            className="text-amber-600 border-amber-600 hover:bg-amber-50"
          >
            üì∞ Not√≠cia
          </Button>
          
          <Button 
            variant="outline" 
            onClick={demoNotifications.success}
            className="text-green-600 border-green-600 hover:bg-green-50"
          >
            ‚úÖ Sucesso
          </Button>
          
          <Button 
            variant="outline" 
            onClick={demoNotifications.error}
            className="text-red-600 border-red-600 hover:bg-red-50"
          >
            ‚ùå Erro
          </Button>
          
          <Button 
            variant="outline" 
            onClick={demoNotifications.warning}
            className="text-orange-600 border-orange-600 hover:bg-orange-50"
          >
            ‚ö†Ô∏è Aviso
          </Button>
          
          <Button 
            variant="outline" 
            onClick={demoNotifications.info}
            className="text-gray-600 border-gray-600 hover:bg-gray-50"
          >
            ‚ÑπÔ∏è Informa√ß√£o
          </Button>
        </div>
      </div>

      {/* Monitoramento Autom√°tico */}
      <div className="bg-gray-50 dark:bg-gray-800 p-4 rounded-lg">
        <h3 className="text-lg font-semibold mb-3">Monitoramento Autom√°tico</h3>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-3">
          <Button 
            variant="default" 
            onClick={demoMonitoring.startPriceAlert}
            className="bg-blue-600 hover:bg-blue-700"
          >
            üéØ Ativar Alerta de Pre√ßo
          </Button>
          
          <Button 
            variant="default" 
            onClick={demoMonitoring.startArbitrageScanner}
            className="bg-green-600 hover:bg-green-700"
          >
            üîç Scanner de Arbitragem
          </Button>
          
          <Button 
            variant="default" 
            onClick={demoMonitoring.startPortfolioMonitoring}
            className="bg-purple-600 hover:bg-purple-700"
          >
            üìä Monitorar Portfolio
          </Button>
        </div>
        <p className="text-sm text-gray-500 mt-3">
          Estes bot√µes ativam monitoramento autom√°tico que gerar√° notifica√ß√µes baseadas em condi√ß√µes reais.
        </p>
      </div>

      {/* Notifica√ß√£o Customizada */}
      <div className="bg-gray-50 dark:bg-gray-800 p-4 rounded-lg">
        <h3 className="text-lg font-semibold mb-3">Notifica√ß√£o Customizada</h3>
        <Button 
          onClick={() => {
            createNotification({
              type: 'info',
              title: 'Notifica√ß√£o Customizada',
              message: 'Esta √© uma notifica√ß√£o criada com configura√ß√µes personalizadas',
              priority: 'medium',
              persistent: true,
              actions: [
                {
                  label: 'A√ß√£o 1',
                  action: () => alert('A√ß√£o 1 executada!')
                },
                {
                  label: 'A√ß√£o 2',
                  action: () => alert('A√ß√£o 2 executada!'),
                  variant: 'destructive'
                }
              ],
              metadata: {
                customField: 'valor personalizado',
                timestamp: Date.now()
              },
              expiresIn: 30, // 30 minutos
              sound: true,
              browserNotification: true
            });
          }}
          className="bg-indigo-600 hover:bg-indigo-700"
        >
          üé® Criar Notifica√ß√£o Customizada
        </Button>
      </div>

      {/* Informa√ß√µes de Uso */}
      <div className="bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg border border-blue-200 dark:border-blue-800">
        <h3 className="text-lg font-semibold mb-3 text-blue-900 dark:text-blue-100">
          üí° Como Usar
        </h3>
        <ul className="space-y-2 text-sm text-blue-800 dark:text-blue-200">
          <li>‚Ä¢ <strong>Toast Notifications:</strong> Aparecem automaticamente no canto inferior direito</li>
          <li>‚Ä¢ <strong>Central de Notifica√ß√µes:</strong> Clique no √≠cone de sino no navbar para ver todas</li>
          <li>‚Ä¢ <strong>Som:</strong> Notifica√ß√µes reproduzem sons √∫nicos baseados no tipo</li>
          <li>‚Ä¢ <strong>Browser Notifications:</strong> Aparecem mesmo quando a aba n√£o est√° ativa</li>
          <li>‚Ä¢ <strong>Persist√™ncia:</strong> Notifica√ß√µes s√£o salvas automaticamente no localStorage</li>
          <li>‚Ä¢ <strong>Configura√ß√µes:</strong> Personalize cada tipo na aba "Configura√ß√µes" da central</li>
        </ul>
      </div>

      {/* APIs Dispon√≠veis */}
      <div className="bg-green-50 dark:bg-green-900/20 p-4 rounded-lg border border-green-200 dark:border-green-800">
        <h3 className="text-lg font-semibold mb-3 text-green-900 dark:text-green-100">
          üîß APIs Dispon√≠veis
        </h3>
        <div className="space-y-2 text-sm font-mono text-green-800 dark:text-green-200">
          <div>‚Ä¢ <code>notify.success('t√≠tulo', 'mensagem')</code></div>
          <div>‚Ä¢ <code>notify.error('t√≠tulo', 'mensagem')</code></div>
          <div>‚Ä¢ <code>notify.priceAlert(symbol, current, target, direction)</code></div>
          <div>‚Ä¢ <code>notificationService.startPriceMonitoring(...)</code></div>
          <div>‚Ä¢ <code>useNotifications()</code> - Hook React</div>
        </div>
      </div>
    </div>
  );
};

export default NotificationDemo;