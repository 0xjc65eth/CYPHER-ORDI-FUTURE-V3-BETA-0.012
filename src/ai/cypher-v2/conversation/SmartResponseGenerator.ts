// Smart Response Generator for CYPHER AI v2
// Generates intelligent, context-aware responses based on user input

import type { Intent, EmotionType, MarketData } from '../types';

export class SmartResponseGenerator {
  private bitcoinFacts: string[] = [
    'O Bitcoin est√° mostrando um padr√£o de consolida√ß√£o nas √∫ltimas 24 horas.',
    'O hashrate da rede Bitcoin atingiu novos recordes, indicando seguran√ßa crescente.',
    'Os volumes de negocia√ß√£o est√£o indicando interesse institucional renovado.',
    'A domin√¢ncia do Bitcoin no mercado cripto est√° em um ponto crucial.',
    'Os indicadores on-chain mostram acumula√ß√£o por hodlers de longo prazo.'
  ];

  private marketInsights: string[] = [
    'O Fear & Greed Index est√° sinalizando cautela no mercado.',
    'As baleias est√£o movimentando grandes volumes para exchanges.',
    'O funding rate dos futuros indica sentimento neutro a bullish.',
    'A correla√ß√£o com mercados tradicionais diminuiu significativamente.',
    'Os n√≠veis de suporte e resist√™ncia est√£o bem definidos no gr√°fico.'
  ];

  generateIntelligentResponse(
    userInput: string, 
    intent: Intent, 
    marketData?: MarketData
  ): string {
    const input = userInput.toLowerCase();
    
    // Price-related queries
    if (this.isPriceQuery(input)) {
      return this.generatePriceResponse(input, marketData);
    }
    
    // Analysis requests
    if (this.isAnalysisRequest(input)) {
      return this.generateAnalysisResponse(input, marketData);
    }
    
    // Trading questions
    if (this.isTradingQuery(input)) {
      return this.generateTradingResponse(input, marketData);
    }
    
    // Ordinals/Runes queries
    if (this.isOrdinalsQuery(input)) {
      return this.generateOrdinalsResponse(input);
    }
    
    // Market sentiment
    if (this.isSentimentQuery(input)) {
      return this.generateSentimentResponse(marketData);
    }
    
    // Educational questions
    if (this.isEducationalQuery(input)) {
      return this.generateEducationalResponse(input);
    }
    
    // Default: Generate contextual response based on keywords
    return this.generateContextualResponse(input, marketData);
  }

  private isPriceQuery(input: string): boolean {
    const priceKeywords = ['pre√ßo', 'price', 'valor', 'cota√ß√£o', 'quanto', 'custa'];
    return priceKeywords.some(keyword => input.includes(keyword));
  }

  private isAnalysisRequest(input: string): boolean {
    const analysisKeywords = ['an√°lise', 'analisar', 'analisa', 'estudo', 'avaliar', 'tend√™ncia'];
    return analysisKeywords.some(keyword => input.includes(keyword));
  }

  private isTradingQuery(input: string): boolean {
    const tradingKeywords = ['comprar', 'vender', 'trade', 'trading', 'investir', 'posi√ß√£o'];
    return tradingKeywords.some(keyword => input.includes(keyword));
  }

  private isOrdinalsQuery(input: string): boolean {
    const ordinalsKeywords = ['ordinal', 'ordinals', 'inscription', 'rune', 'runes', 'brc-20'];
    return ordinalsKeywords.some(keyword => input.includes(keyword));
  }

  private isSentimentQuery(input: string): boolean {
    const sentimentKeywords = ['sentimento', 'mercado', 'bull', 'bear', 'otimista', 'pessimista'];
    return sentimentKeywords.some(keyword => input.includes(keyword));
  }

  private isEducationalQuery(input: string): boolean {
    const eduKeywords = ['como', 'funciona', 'o que √©', 'explica', 'ensina', 'aprenda'];
    return eduKeywords.some(keyword => input.includes(keyword));
  }

  private generatePriceResponse(input: string, marketData?: MarketData): string {
    const btcPrice = marketData?.bitcoin?.price || 95000;
    const change24h = marketData?.bitcoin?.change24h || 0;
    const volume = marketData?.bitcoin?.volume24h || 0;
    
    const trend = change24h > 0 ? 'alta' : 'baixa';
    const emoji = change24h > 0 ? 'üìà' : 'üìâ';
    
    return `${emoji} Bitcoin est√° sendo negociado a $${btcPrice.toLocaleString('pt-BR')} ` +
           `com ${trend} de ${Math.abs(change24h).toFixed(2)}% nas √∫ltimas 24h. ` +
           `Volume de negocia√ß√£o: $${(volume / 1e9).toFixed(2)}B. ` +
           `${this.getRandomFact()}`;
  }

  private generateAnalysisResponse(input: string, marketData?: MarketData): string {
    const price = marketData?.bitcoin?.price || 95000;
    const change = marketData?.bitcoin?.change24h || 0;
    
    const analysis = [
      `üìä An√°lise t√©cnica atual do Bitcoin:`,
      `‚Ä¢ Pre√ßo: $${price.toLocaleString('pt-BR')}`,
      `‚Ä¢ Varia√ß√£o 24h: ${change > 0 ? '+' : ''}${change.toFixed(2)}%`,
      `‚Ä¢ Suporte pr√≥ximo: $${(price * 0.95).toLocaleString('pt-BR')}`,
      `‚Ä¢ Resist√™ncia: $${(price * 1.05).toLocaleString('pt-BR')}`,
      `‚Ä¢ RSI: ${this.generateRSI(change)}`,
      `‚Ä¢ Tend√™ncia: ${this.analyzeTrend(change)}`,
      '',
      `üí° ${this.getRandomInsight()}`
    ];
    
    return analysis.join('\n');
  }

  private generateTradingResponse(input: string, marketData?: MarketData): string {
    const price = marketData?.bitcoin?.price || 95000;
    const change = marketData?.bitcoin?.change24h || 0;
    
    if (input.includes('comprar')) {
      return `üõí An√°lise para compra de Bitcoin:\n` +
             `‚Ä¢ Pre√ßo atual: $${price.toLocaleString('pt-BR')}\n` +
             `‚Ä¢ Momento: ${change < -2 ? 'Poss√≠vel oportunidade' : 'Aguarde corre√ß√£o'}\n` +
             `‚Ä¢ Sugest√£o: DCA (Dollar Cost Average) √© sempre prudente\n` +
             `‚Ä¢ Risco: ${this.assessRisk(change)}\n\n` +
             `‚ö†Ô∏è Lembre-se: invista apenas o que pode perder.`;
    }
    
    if (input.includes('vender')) {
      return `üí∞ An√°lise para venda de Bitcoin:\n` +
             `‚Ä¢ Pre√ßo atual: $${price.toLocaleString('pt-BR')}\n` +
             `‚Ä¢ Lucro potencial: ${change > 5 ? 'Bom momento para realizar lucros' : 'Considere manter'}\n` +
             `‚Ä¢ Pr√≥xima resist√™ncia: $${(price * 1.08).toLocaleString('pt-BR')}\n` +
             `‚Ä¢ Sugest√£o: Venda parcial para garantir lucros\n\n` +
             `üìà ${this.getRandomFact()}`;
    }
    
    return `üìä Para decis√µes de trading, considere:\n` +
           `‚Ä¢ An√°lise t√©cnica completa\n` +
           `‚Ä¢ Seus objetivos pessoais\n` +
           `‚Ä¢ Gest√£o de risco\n` +
           `‚Ä¢ Diversifica√ß√£o do portfolio\n\n` +
           `Posso fazer uma an√°lise espec√≠fica se quiser.`;
  }

  private generateOrdinalsResponse(input: string): string {
    const responses = {
      ordinals: `üü† Ordinals s√£o inscri√ß√µes digitais no Bitcoin:\n` +
                `‚Ä¢ Armazenam dados diretamente na blockchain\n` +
                `‚Ä¢ Cada satoshi pode carregar uma inscri√ß√£o √∫nica\n` +
                `‚Ä¢ Floor price atual: ~0.001 BTC\n` +
                `‚Ä¢ Cole√ß√µes populares: Bitcoin Punks, Ordinal Maxi Biz\n` +
                `‚Ä¢ Use marketplaces como Magic Eden ou OKX para negociar`,
                
      runes: `·ö± Runes Protocol √© o padr√£o de tokens fung√≠veis no Bitcoin:\n` +
             `‚Ä¢ Mais eficiente que BRC-20\n` +
             `‚Ä¢ Integrado ao protocolo base\n` +
             `‚Ä¢ Principais runes: DOG, PUPS, RUNE\n` +
             `‚Ä¢ Volume di√°rio: ~$10M\n` +
             `‚Ä¢ Cuidado com a volatilidade extrema!`
    };
    
    if (input.includes('rune')) {
      return responses.runes;
    }
    
    return responses.ordinals;
  }

  private generateSentimentResponse(marketData?: MarketData): string {
    const change = marketData?.bitcoin?.change24h || 0;
    const fearGreedValue = this.calculateFearGreed(change);
    
    return `üé≠ Sentimento atual do mercado:\n\n` +
           `‚Ä¢ Fear & Greed Index: ${fearGreedValue}/100 (${this.interpretFearGreed(fearGreedValue)})\n` +
           `‚Ä¢ Tend√™ncia: ${change > 0 ? 'Bullish üêÇ' : 'Bearish üêª'}\n` +
           `‚Ä¢ Volume: ${this.interpretVolume(marketData?.bitcoin?.volume24h)}\n` +
           `‚Ä¢ Momento: ${this.interpretMomentum(change)}\n\n` +
           `${this.getRandomInsight()}`;
  }

  private generateEducationalResponse(input: string): string {
    const topics = {
      bitcoin: `‚Çø Bitcoin √© a primeira criptomoeda descentralizada:\n` +
               `‚Ä¢ Criado em 2009 por Satoshi Nakamoto\n` +
               `‚Ä¢ Supply m√°ximo: 21 milh√µes\n` +
               `‚Ä¢ Halving a cada 4 anos\n` +
               `‚Ä¢ Proof of Work (PoW)\n` +
               `‚Ä¢ Pr√≥ximo halving: 2028`,
               
      blockchain: `‚õìÔ∏è Blockchain √© um livro-raz√£o distribu√≠do:\n` +
                  `‚Ä¢ Registros imut√°veis\n` +
                  `‚Ä¢ Descentralizado\n` +
                  `‚Ä¢ Transparente\n` +
                  `‚Ä¢ Seguro por criptografia\n` +
                  `‚Ä¢ Base de todas as criptomoedas`,
                  
      mining: `‚õèÔ∏è Minera√ß√£o de Bitcoin:\n` +
              `‚Ä¢ Valida transa√ß√µes\n` +
              `‚Ä¢ Cria novos blocos\n` +
              `‚Ä¢ Recompensa atual: 6.25 BTC/bloco\n` +
              `‚Ä¢ Dificuldade ajusta a cada 2016 blocos\n` +
              `‚Ä¢ Consome muita energia`
    };
    
    for (const [key, content] of Object.entries(topics)) {
      if (input.includes(key)) {
        return content;
      }
    }
    
    return `üìö Sobre o que voc√™ gostaria de aprender?\n` +
           `‚Ä¢ Bitcoin e seu funcionamento\n` +
           `‚Ä¢ Blockchain e tecnologia\n` +
           `‚Ä¢ Trading e estrat√©gias\n` +
           `‚Ä¢ Ordinals e Runes\n` +
           `‚Ä¢ An√°lise t√©cnica\n\n` +
           `Pergunte especificamente!`;
  }

  private generateContextualResponse(input: string, marketData?: MarketData): string {
    // Extract key topics from input
    const topics = this.extractTopics(input);
    
    if (topics.length === 0) {
      return this.generateDefaultResponse(marketData);
    }
    
    // Build response based on topics
    let response = `Entendi sua pergunta sobre ${topics.join(', ')}.\n\n`;
    
    // Add relevant market data
    if (marketData?.bitcoin) {
      response += `üìä Contexto atual do mercado:\n`;
      response += `‚Ä¢ BTC: $${marketData.bitcoin.price?.toLocaleString('pt-BR')}\n`;
      response += `‚Ä¢ Varia√ß√£o: ${marketData.bitcoin.change24h?.toFixed(2)}%\n\n`;
    }
    
    // Add specific insights based on topics
    topics.forEach(topic => {
      const insight = this.getTopicInsight(topic);
      if (insight) {
        response += `${insight}\n\n`;
      }
    });
    
    response += `Posso detalhar algum aspecto espec√≠fico?`;
    
    return response;
  }

  private extractTopics(input: string): string[] {
    const topics: string[] = [];
    const topicMap = {
      bitcoin: ['bitcoin', 'btc', 'satoshi'],
      ethereum: ['ethereum', 'eth', 'ether'],
      trading: ['trade', 'trading', 'comprar', 'vender'],
      analise: ['an√°lise', 't√©cnica', 'gr√°fico'],
      ordinals: ['ordinal', 'inscription', 'brc-20'],
      runes: ['rune', 'runes', 'protocol'],
      mining: ['minerar', 'minera√ß√£o', 'hashrate']
    };
    
    for (const [topic, keywords] of Object.entries(topicMap)) {
      if (keywords.some(kw => input.toLowerCase().includes(kw))) {
        topics.push(topic);
      }
    }
    
    return topics;
  }

  private getTopicInsight(topic: string): string {
    const insights: Record<string, string> = {
      bitcoin: '‚Çø Bitcoin continua sendo o ativo digital mais seguro e descentralizado.',
      ethereum: 'Œû Ethereum lidera em DeFi e smart contracts.',
      trading: 'üìà Sempre use stop-loss e gerencie seu risco.',
      analise: 'üìä Combine an√°lise t√©cnica com fundamentalista.',
      ordinals: 'üü† Ordinals est√£o revolucionando NFTs no Bitcoin.',
      runes: '·ö± Runes trazem tokens fung√≠veis eficientes ao Bitcoin.',
      mining: '‚õèÔ∏è A rentabilidade da minera√ß√£o depende do custo de energia.'
    };
    
    return insights[topic] || '';
  }

  private generateDefaultResponse(marketData?: MarketData): string {
    const price = marketData?.bitcoin?.price || 95000;
    const change = marketData?.bitcoin?.change24h || 0;
    
    return `Ol√°! Sou CYPHER AI, especializada em Bitcoin e criptomoedas.\n\n` +
           `üìä Resumo do mercado agora:\n` +
           `‚Ä¢ Bitcoin: $${price.toLocaleString('pt-BR')} (${change > 0 ? '+' : ''}${change.toFixed(2)}%)\n` +
           `‚Ä¢ Tend√™ncia: ${this.analyzeTrend(change)}\n` +
           `‚Ä¢ ${this.getRandomFact()}\n\n` +
           `Como posso ajudar voc√™ hoje? Posso falar sobre:\n` +
           `‚Ä¢ Pre√ßos e an√°lises de mercado\n` +
           `‚Ä¢ Estrat√©gias de trading\n` +
           `‚Ä¢ Ordinals e Runes\n` +
           `‚Ä¢ Educa√ß√£o sobre cripto`;
  }

  // Helper methods
  private generateRSI(change: number): string {
    const rsi = 50 + (change * 5);
    if (rsi > 70) return `${rsi.toFixed(0)} (Sobrecomprado)`;
    if (rsi < 30) return `${rsi.toFixed(0)} (Sobrevendido)`;
    return `${rsi.toFixed(0)} (Neutro)`;
  }

  private analyzeTrend(change: number): string {
    if (change > 5) return 'Forte alta üöÄ';
    if (change > 2) return 'Alta moderada üìà';
    if (change > 0) return 'Levemente positiva ‚ûï';
    if (change > -2) return 'Levemente negativa ‚ûñ';
    if (change > -5) return 'Queda moderada üìâ';
    return 'Forte queda üîª';
  }

  private assessRisk(change: number): string {
    const absChange = Math.abs(change);
    if (absChange > 10) return 'Alto ‚ö†Ô∏è';
    if (absChange > 5) return 'M√©dio ‚ö°';
    return 'Baixo ‚úÖ';
  }

  private calculateFearGreed(change: number): number {
    return Math.max(0, Math.min(100, 50 + (change * 10)));
  }

  private interpretFearGreed(value: number): string {
    if (value >= 80) return 'Gan√¢ncia Extrema';
    if (value >= 60) return 'Gan√¢ncia';
    if (value >= 40) return 'Neutro';
    if (value >= 20) return 'Medo';
    return 'Medo Extremo';
  }

  private interpretVolume(volume?: number): string {
    if (!volume) return 'Dados indispon√≠veis';
    const volumeB = volume / 1e9;
    if (volumeB > 50) return 'Volume muito alto üìä';
    if (volumeB > 30) return 'Volume alto üìà';
    if (volumeB > 20) return 'Volume normal üìä';
    return 'Volume baixo üìâ';
  }

  private interpretMomentum(change: number): string {
    if (change > 5) return 'Momentum forte de alta';
    if (change > 0) return 'Momentum positivo';
    if (change > -5) return 'Momentum negativo';
    return 'Momentum forte de baixa';
  }

  private getRandomFact(): string {
    return this.bitcoinFacts[Math.floor(Math.random() * this.bitcoinFacts.length)];
  }

  private getRandomInsight(): string {
    return this.marketInsights[Math.floor(Math.random() * this.marketInsights.length)];
  }
}

export default SmartResponseGenerator;